# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on pull request events
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com
          scope: avanssion

      - name: npm install (--ignore-scripts to disable husky on CI), audit, lint, build
        run: |
          rm .npmrc
          npm ci --ignore-scripts
          # npm audit
          npm run lint:all
          npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  ## Example of sending an automated message to Workplace after the workflow is run ##
  ## This could be any sort of messenger like Slack etc. ##
  # workplace:
  #   name: Workplace
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: always()
  #   steps:
  #     - name: Get conclusion via env.WORKFLOW_CONCLUSION
  #       uses: technote-space/workflow-conclusion-action@v2
  #     - name: Inject slug/short variables
  #       uses: rlespinasse/github-slug-action@v3.x
  #     - name: Set icon if job has succeeded
  #       if: env.WORKFLOW_CONCLUSION == 'success'
  #       run: |
  #         echo "STATUS_ICON=✅" >> $GITHUB_ENV
  #     - name: Set icon if job has failed
  #       if: env.WORKFLOW_CONCLUSION != 'success'
  #       run: |
  #         echo "STATUS_ICON=❌" >> $GITHUB_ENV
  #     - name: Notify
  #       run: |
  #         curl --location --request POST "https://graph.facebook.com/v6.0/me/messages?access_token=${{ SECRETS.WORKPLACE_CHAT_CI_CD_ACCESS_TOKEN }}" \
  #           --header "Content-Type: application/json" \
  #           --data-raw "{ \"recipient\": { \"thread_key\": \"${{ SECRETS.WORKPLACE_CHAT_CI_CD_THREAD_KEY }}\" }, \"message\": { \"text\": \"*${{ env.STATUS_ICON }} $GITHUB_WORKFLOW #$GITHUB_RUN_NUMBER - ${{ github.event.head_commit.message }}*\n\n*Commit* - \`${{ env.GITHUB_SHA_SHORT }}\`\n*Repo* - $GITHUB_REPOSITORY\n*Branch* - ${{ env.GITHUB_REF_SLUG }}\n*Author* - $GITHUB_ACTOR\n\nhttps://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\" } }"
